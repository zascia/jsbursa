TASK 1
--------------
Реализовать директиву, которая позволяет организовать "распределенный" блок radio button'ов. Что это означает?
Все из вас представляют как работает блок radio buttonов - в любой момент времени можно выбрать только один. Но это работает в пределах одного блока

Иногда возникает необходимость реализовать подобную функциональность но так, чтобы разные радиобаттоны были где-угодно.

Как это должно работать
<magic-radio group="test" title="Привет">
Должно отрендериться в следующий HTML (внутри директивы, никаких replace: true и трансклюдов нам не надо)
<label><input type="radio">Привет</label>

Если я кликну по этому radio то все radio НА СТРАНИЦЕ у которых group был test - должны перестать быть выбраны кроме текущего



TASK 2
--------------
Реализовать карусельку, которая выглядит вот так:
https://docs.google.com/document/d/1KJtiqrX8oqxM30G3xMxu_dcrt_zDQDubH_GI9xIzU9c/edit

(можно не делать разные цвета, тени и разные размеры - это вы делаете для себя)

2. Код который выглядит вот так:
<smartjs-carousel smartjs-items="cards" smartjs-action="openCard(card)">
     <div class="card"> ... </div>
</smartjs-carousel>
Все что находится между открывающим и закрывающим тегом - это шаблон карточки. smartjs-items массив, количеством всегда 7.

3. При клике по карточке должен вызываться код, описанный в smartjs-action. При этом в card должен лежать объект карточки

4. Карусель должна "крутиться" каждые Х секунд (CSS анимация)

5. При наведении на карточку кручение карусели должно прекращаться


ПОДХОДЫ 1
вариант через $rootScope.$broadcast плохой, он нарушает инкапсуляцию.
Через контроллеры не сработает, реквайрить не получится.

Можно: Независимые модули и написать сервис, который будет объединять.
Должен быть отдельный сервис, в котором каждая директива в своей линк добавляет свой контроллер в этот сервис (как
пушили листенеры в предыдущем).
Каждая директива будет связыватсья с этим сервисом (бужет иметь в депенденси инж этот сервис). Она будет пинать в
сервис, что ее чекнули.
Сервис знает о всех, кто регистрировался с этим именем. У сервиса будут методы:
- addRadioToGroup(name, ctrl)
- clickRadioGroup(name, ctrl) - обрабатываем клик по конкретной группе
- removeFromGroup(name, ctrl) - отписать от сервиса исчезнувшую директиву.

директива при появлении в линке вызывает метод addRadio сервиса. Передает параметры имя своей группы и свой
контроллер. В сервисе хранится записи: имя группы и список всех переданных контроллеров (как пушили спиннер). В
директиве в обработчике онклик мы говорим сервису групкликед, имя и передаем себя (контроллер). Сервис берет массив
со всеми контроллерами данного имени и вызывает у них метод uncheck.
Directive controller: uncheck method
Directive link: вызывает на сервисе метод addRadioToGroup и передает ей имя группы и свой контроллер зареквайреный.

Внутри сервиса хранится объект, ключом которого есть имя группы, ключ - это массив, в котором лежат контроллеры,
имеющие эту группу.