https://docs.google.com/document/d/15nYOzIy9xTOta7l4LBGM4MA70SxTs2_unIdvEWBf-dI/edit

тесты пишутся на jasmine (jasmine-node)
доступные к использованию сторонние библиотеки: lodash, supertest
вы не можете полагаться на запуск приложения на порту 20007
ваши тесты должны проверять коды возврата (они должны быть те же, которые были необходимы в задании #7) и все требования, сформулированные в задании #7

A. Начальное состояние сервера (при перезапуске) - список пользователей.
1. Проверить, что список пользователей = массив объектов.

B. Запрос GET на window.crudURL должен возвращать список пользователей.
1. Проверить, что GET запрос на /api/users/СУЩЕСТВУЮЩИЙ_ID возвращает 404.
2. Проверить, что GET запрос на /blablabla возвращает 404.
3. Проверить, что GET запрос на /api/users/НЕСУЩЕСТВУЮЩИЙ_ID возвращает 404.
4. Проверить, что ответ сервера содержит Content-Type application/json.

C. GET на /refreshAdmins возвращает корректный результат.
1. Проверить, что дает статус 200, если указать Content-Type application/json.
2. Проверить, что ответ сервера содержит Content-Type application/json.

D. PUT на window.crudURL + '/' + id (где id - id редактируемого человека) сохраняет/изменяет пользователя.
1. Проверить, что дает статус 204, если указать Content-Type application/json.
2. Проверить, что только при получении корректной роли: без роли, Student, Support, Administrator пользователь создается.
3. Проверить, что PUT запрос на /blablabla возвращает 404.
4. Проверить, что PUT запрос на /api/users/НЕСУЩЕСТВУЮЩИЙ_ID возвращает 404.
5. Проверить, что ответ сервера содержит Content-Type application/json.

E. POST на winow.crudURL создает пользователя, в ответ приходит id новой созданной сущности.
1. Проверить, что дает статус 200, если указать Content-Type application/json, и возвращает новый уникальный id пользователя.
2. Проверить, что только при получении корректной роли: без роли, Student, Support, Administrator пользователь изменяется/сохраняется.
3. Проверить, что POST запрос на /blablabla возвращает 404.
4. Проверить, что POST запрос на /api/users/СУЩЕСТВУЮЩИЙ_ID возвращает 400. Не обязательно.
5. Проверить, что ответ сервера содержит Content-Type application/json.

F. DELETE на window.crudURL + '/' + id (где id - id удаляемого человека) удаляет пользователя.
1. Проверить, что дает статус 204, если указать Content-Type application/json.
2. Проверить, что ответ сервера содержит Content-Type application/json.
3. Проверить, что DELETE запрос на /blablabla возвращает 404.
4. Проверить, что DELETE запрос на /api/users/НЕСУЩЕСТВУЮЩИЙ_ID возвращает 404.

G. Проверки на Content-Type
1. Проверить, что дает статус 401, если не указывать Content-Type.
2. Проверить, что дает статус 401, если Content-Type не application/json.


